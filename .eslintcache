[{"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\index.js":"1","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\App.js":"2","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\context\\AuthContext.js":"3","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\firebase.js":"4","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\Dashboard.js":"5","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\context\\DatabaseContext.js":"6","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\context\\FunctionsContext.js":"7","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\CardGrid.js":"8","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\Card.js":"9","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\CardRow.js":"10","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\Cell.js":"11","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\auth\\Login.js":"12","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\auth\\Signup.js":"13","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\auth\\ForgotPassword.js":"14","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\auth\\UpdateProfile.js":"15","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\CallingGame.js":"16","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\CurrentGame.js":"17","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\NumberHistory.js":"18","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\common\\PrivateRoute.js":"19","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\chat\\ChatPanel.js":"20","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\chat\\ChatMessage.js":"21"},{"size":277,"mtime":1609500758333,"results":"22","hashOfConfig":"23"},{"size":1769,"mtime":1609596901316,"results":"24","hashOfConfig":"23"},{"size":1433,"mtime":1609500758332,"results":"25","hashOfConfig":"23"},{"size":953,"mtime":1609406280319,"results":"26","hashOfConfig":"23"},{"size":5556,"mtime":1609596964683,"results":"27","hashOfConfig":"23"},{"size":2700,"mtime":1609599955882,"results":"28","hashOfConfig":"23"},{"size":1940,"mtime":1609599841794,"results":"29","hashOfConfig":"23"},{"size":406,"mtime":1609597483816,"results":"30","hashOfConfig":"23"},{"size":338,"mtime":1609596474516,"results":"31","hashOfConfig":"23"},{"size":1155,"mtime":1609596564239,"results":"32","hashOfConfig":"23"},{"size":278,"mtime":1609596317566,"results":"33","hashOfConfig":"23"},{"size":1939,"mtime":1609597257170,"results":"34","hashOfConfig":"23"},{"size":2525,"mtime":1609597300833,"results":"35","hashOfConfig":"23"},{"size":1729,"mtime":1609330197707,"results":"36","hashOfConfig":"23"},{"size":2756,"mtime":1609427478145,"results":"37","hashOfConfig":"23"},{"size":2741,"mtime":1609585515276,"results":"38","hashOfConfig":"23"},{"size":1733,"mtime":1609597442046,"results":"39","hashOfConfig":"23"},{"size":1011,"mtime":1609428397046,"results":"40","hashOfConfig":"23"},{"size":507,"mtime":1609330640186,"results":"41","hashOfConfig":"23"},{"size":1243,"mtime":1609600629586,"results":"42","hashOfConfig":"23"},{"size":526,"mtime":1609600308828,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1a1788x",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\index.js",[],["90","91"],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\App.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\context\\AuthContext.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\firebase.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\Dashboard.js",["92"],"import React, { useState, useRef } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button, Card, Alert, ListGroup, Modal, Form } from 'react-bootstrap';\n\nimport { useAuth } from '../context/AuthContext';\nimport { useDatabase } from '../context/DatabaseContext';\nimport { useFunctions } from '../context/FunctionsContext';\n\nconst Dashboard = () => {\n  const [error, setError] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [oneLine, setOneLine] = useState(true);\n  const [twoLines, setTwoLines] = useState(true);\n  const [fullHouse, setFullHouse] = useState(true);\n\n  const history = useHistory();\n\n  const gameNameRef = useRef();\n  const cardColorRef = useRef();\n\n  const { currentUser, logout } = useAuth();\n  const { games } = useDatabase();\n  const { createNewGame, joinGame, leaveGame, startGame } = useFunctions();\n\n  const handleLogout = async () => {\n    setError('');\n    try {\n      await logout();\n      history.push('/login');\n    } catch {\n      setError('Failed to log out');\n    }\n  };\n\n  const handleCreateGame = async () => {\n    try {\n      console.log(oneLine, twoLines, fullHouse);\n      await createNewGame({\n        name: gameNameRef.current.value,\n        color: cardColorRef.current.value,\n        oneLine,\n        twoLines,\n        fullHouse,\n      });\n      setShowModal(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const handleShowModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n\n  const handleJoinGame = async game => {\n    try {\n      if (currentUser.uid === game.owner) {\n        await startGame(game.id);\n        history.push('/call-game');\n      } else {\n        await joinGame(game.id);\n        history.push('/join-game');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <Modal show={showModal} onHide={handleCloseModal} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Create New Game</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Label>Game Name</Form.Label>\n            <Form.Control type=\"text\" ref={gameNameRef} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Card Color</Form.Label>\n            <Form.Control as=\"select\" ref={cardColorRef}>\n              <option\n                style={{ backgroundColor: 'blueviolet' }}\n                value=\"blueviolet\"\n              >\n                Purple\n              </option>\n              <option\n                style={{ backgroundColor: 'lightgreen' }}\n                value=\"lightgreen\"\n              >\n                Green\n              </option>\n              <option\n                style={{ backgroundColor: 'lightslategray' }}\n                value=\"lightslategray\"\n              >\n                Gray\n              </option>\n              <option style={{ backgroundColor: 'orange' }} value=\"orange\">\n                Orange\n              </option>\n              <option\n                style={{ backgroundColor: 'palegoldenrod' }}\n                value=\"palegoldenrod\"\n              >\n                Yellow\n              </option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Check\n            type=\"checkbox\"\n            label=\"One Line\"\n            defaultChecked={oneLine}\n            onChange={e => setOneLine(e.currentTarget.checked)}\n          />\n          <Form.Check\n            type=\"checkbox\"\n            label=\"Two Lines\"\n            defaultChecked={twoLines}\n            onChange={e => setTwoLines(e.currentTarget.checked)}\n          />\n          <Form.Check\n            type=\"checkbox\"\n            label=\"Full House\"\n            defaultChecked={fullHouse}\n            onChange={e => setFullHouse(e.currentTarget.checked)}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCreateGame}>\n            Create New Game\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Card>\n        <Card.Body>\n          <h2>Current Games</h2>\n          <ListGroup>\n            {games &&\n              games.map(game => (\n                <ListGroup.Item\n                  key={game.id}\n                  className=\"d-flex flex-row justify-content-between align-items-center\"\n                >\n                  {game.name} ({game.players.length})\n                  <Button variant=\"link\" onClick={() => handleJoinGame(game)}>\n                    {currentUser.uid === game.owner\n                      ? 'Start Game'\n                      : game.inProgress && !game.started && 'Join Game'}\n                  </Button>\n                </ListGroup.Item>\n              ))}\n          </ListGroup>\n          <div className=\"text-center w-100\">\n            <Button className=\"mt-4\" variant=\"link\" onClick={handleShowModal}>\n              Create New Game\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">\n            {currentUser && currentUser.displayName}'s Profile\n          </h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n            Update Profile\n          </Link>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button variant=\"link\" onClick={handleLogout}>\n          Log Out\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\context\\DatabaseContext.js",["93"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\n\r\nimport { useAuth } from './AuthContext';\r\nimport { useFunctions } from './FunctionsContext';\r\n\r\nconst DatabaseContext = React.createContext();\r\n\r\nexport const useDatabase = () => {\r\n  return useContext(DatabaseContext);\r\n};\r\n\r\nexport const DatabaseProvider = ({ children }) => {\r\n  const [games, setGames] = useState([]);\r\n  const [currentGame, setCurrentGame] = useState(null);\r\n  const [callingGame, setCallingGame] = useState(null);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const { currentUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection('games').onSnapshot(snapshot => {\r\n      const newGames = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      let gotCurrentGame = false;\r\n      let gotCallingGame = false;\r\n      newGames.forEach(game => {\r\n        if (\r\n          currentUser &&\r\n          game.players.some(player => player.id === currentUser.uid)\r\n        ) {\r\n          const cards = game.players.find(\r\n            player => player.id === currentUser.uid\r\n          ).cards;\r\n          gotCurrentGame = true;\r\n          setCurrentGame({\r\n            id: game.id,\r\n            owner: game.owner,\r\n            name: game.name,\r\n            cards,\r\n            numbersCalled: game.numbersCalled,\r\n            oneLine: game.oneLine,\r\n            twoLines: game.twoLines,\r\n            fullHouse: game.fullHouse,\r\n          });\r\n        }\r\n        if (currentUser && game.caller === currentUser.uid) {\r\n          gotCallingGame = true;\r\n          setCallingGame(game);\r\n        }\r\n      });\r\n      if (!gotCallingGame) {\r\n        setCallingGame(null);\r\n      }\r\n      if (!gotCurrentGame) {\r\n        setCurrentGame(null);\r\n      }\r\n      setGames(newGames);\r\n    });\r\n    return unsubscribe;\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (currentGame) {\r\n      const unsubscribe = db\r\n        .collection('messages')\r\n        .where('gameId', '==', currentGame.id)\r\n        .orderBy('sentAt', 'desc')\r\n        .limit(25)\r\n        .onSnapshot(snapshot => {\r\n          const messages = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          console.log('messages', messages);\r\n          setChatMessages(messages);\r\n        });\r\n      return unsubscribe;\r\n    } else {\r\n      setChatMessages([]);\r\n    }\r\n  }, [currentGame]);\r\n\r\n  const value = {\r\n    games,\r\n    currentGame,\r\n    callingGame,\r\n    chatMessages,\r\n  };\r\n\r\n  return (\r\n    <DatabaseContext.Provider value={value}>\r\n      {children}\r\n    </DatabaseContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\context\\FunctionsContext.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\CardGrid.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\Card.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\CardRow.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\Cell.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\auth\\Login.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\auth\\Signup.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\auth\\ForgotPassword.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\auth\\UpdateProfile.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\CallingGame.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\CurrentGame.js",["94"],"import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { useDatabase } from '../../context/DatabaseContext';\r\nimport { useFunctions } from '../../context/FunctionsContext';\r\nimport CardGrid from './CardGrid';\r\nimport NumberHistory from './NumberHistory';\r\nimport ChatPanel from '../chat/ChatPanel';\r\n\r\nconst CurrentGame = () => {\r\n  const { currentGame } = useDatabase();\r\n  const { leaveGame, getUserNickname } = useFunctions();\r\n  const history = useHistory();\r\n\r\n  const handleLeaveGame = async gameId => {\r\n    try {\r\n      await leaveGame(gameId);\r\n      history.push('/');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentGame && (\r\n        <div className=\"d-flex flex-column text-center border border-dark\">\r\n          <h2 className=\"w-100 text-center mt-5\">{currentGame.name}</h2>\r\n          <Button onClick={() => handleLeaveGame(currentGame.id)}>\r\n            Leave Game\r\n          </Button>\r\n          <NumberHistory\r\n            numbersCalled={currentGame.numbersCalled}\r\n            oneLine={currentGame.oneLine}\r\n            twoLines={currentGame.twoLines}\r\n            fullHouse={currentGame.fullHouse}\r\n          />\r\n          <div className=\"d-flex flex-row align-self-center flex-grow-1 border border-primary\">\r\n            <CardGrid cards={currentGame.cards} />\r\n            <ChatPanel />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!currentGame && (\r\n        <>\r\n          <Link to=\"/\" className=\"btn btn-primary w-100 mt-3\">\r\n            No Game In Progress, Return To Home Page\r\n          </Link>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentGame;\r\n","C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\bingo\\NumberHistory.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\common\\PrivateRoute.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\chat\\ChatPanel.js",[],"C:\\Users\\marti\\Documents\\Development\\smifffys-bingo\\src\\components\\chat\\ChatMessage.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":23,"column":36,"nodeType":"101","messageId":"102","endLine":23,"endColumn":45},{"ruleId":"99","severity":1,"message":"103","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":22},{"ruleId":"99","severity":1,"message":"104","line":13,"column":22,"nodeType":"101","messageId":"102","endLine":13,"endColumn":37},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'leaveGame' is assigned a value but never used.","Identifier","unusedVar","'useFunctions' is defined but never used.","'getUserNickname' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]